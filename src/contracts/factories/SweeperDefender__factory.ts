/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SweeperDefender,
  SweeperDefenderInterface,
} from "../SweeperDefender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "erc20",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Funding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "feesPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "fundingAndTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Addr",
        type: "address",
      },
    ],
    name: "funding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Addr",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20Addr",
        type: "address",
      },
    ],
    name: "isFunding",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
    ],
    name: "setFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a6003553480156200001657600080fd5b50604051620017da380380620017da83398181016040528101906200003c919062000249565b806200005d62000051620000a660201b60201c565b620000c260201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002c3565b6000620000bd6200018660201b62000b951760201c565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006200019933620001d060201b60201c565b15620001af57601436033560601c9050620001cc565b620001c46200022a60201b62000bc71760201c565b9050620001cd565b5b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b600033905090565b6000815190506200024381620002a9565b92915050565b6000602082840312156200025c57600080fd5b60006200026c8482850162000232565b91505092915050565b6000620002828262000289565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002b48162000275565b8114620002c057600080fd5b50565b61150780620002d36000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b146101335780639066e7c314610151578063a2f6cb301461016d578063dd90ec4e1461019d578063f2fde38b146101b95761009e565b8063049f2d8a146100a3578063213ecbba146100bf5780633d18678e146100dd578063572b6c05146100f9578063715018a614610129575b600080fd5b6100bd60048036038101906100b89190610d22565b6101d5565b005b6100c76105f4565b6040516100d4919061132f565b60405180910390f35b6100f760048036038101906100f29190610db0565b6105fa565b005b610113600480360381019061010e9190610d22565b610647565b60405161012091906111f4565b60405180910390f35b6101316106a1565b005b61013b610729565b6040516101489190611179565b60405180910390f35b61016b60048036038101906101669190610d4b565b610752565b005b61018760048036038101906101829190610d22565b6109e8565b60405161019491906111f4565b60405180910390f35b6101b760048036038101906101b29190610d4b565b610a78565b005b6101d360048036038101906101ce9190610d22565b610a9d565b005b6101de816109e8565b1561021e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102159061122f565b60405180910390fd5b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231610249610bcf565b6040518263ffffffff1660e01b81526004016102659190611179565b60206040518083038186803b15801561027d57600080fd5b505afa158015610291573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b59190610dd9565b9050600081116102fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f19061124f565b60405180910390fd5b6000610324606461031660035485610bde90919063ffffffff16565b610bf490919063ffffffff16565b9050808373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e61034b610bcf565b306040518363ffffffff1660e01b8152600401610369929190611194565b60206040518083038186803b15801561038157600080fd5b505afa158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610dd9565b10156103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f19061126f565b60405180910390fd5b60008373ffffffffffffffffffffffffffffffffffffffff166323b872dd610420610bcf565b610428610729565b856040518463ffffffff1660e01b8152600401610447939291906111bd565b602060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104999190610d87565b9050806104db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d2906112ef565b60405180910390fd5b81600260006104e8610bcf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061056b610729565b73ffffffffffffffffffffffffffffffffffffffff16610589610bcf565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f56a2f3db08772f7c8572d7b3aabd2395ca11f987a6f89ab099aed662085b6d2b856040516105e5919061132f565b60405180910390a45050505050565b60035481565b6064811061063d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610634906112af565b60405180910390fd5b8060038190555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b6106a9610bcf565b73ffffffffffffffffffffffffffffffffffffffff166106c7610729565b73ffffffffffffffffffffffffffffffffffffffff161461071d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610714906112cf565b60405180910390fd5b6107276000610c0a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61075b826109e8565b61079a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107919061128f565b60405180910390fd5b600082905060008173ffffffffffffffffffffffffffffffffffffffff166370a082316107c5610bcf565b6040518263ffffffff1660e01b81526004016107e19190611179565b60206040518083038186803b1580156107f957600080fd5b505afa15801561080d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108319190610dd9565b9050808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610858610bcf565b306040518363ffffffff1660e01b8152600401610876929190611194565b60206040518083038186803b15801561088e57600080fd5b505afa1580156108a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c69190610dd9565b1015610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe9061126f565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd61092d610bcf565b86856040518463ffffffff1660e01b815260040161094d939291906111bd565b602060405180830381600087803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190610d87565b9050806109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d89061130f565b60405180910390fd5b5050505050565b600080600260006109f7610bcf565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414159050919050565b610a81826109e8565b610a8f57610a8e826101d5565b5b610a998282610752565b5050565b610aa5610bcf565b73ffffffffffffffffffffffffffffffffffffffff16610ac3610729565b73ffffffffffffffffffffffffffffffffffffffff1614610b19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b10906112cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b809061120f565b60405180910390fd5b610b9281610c0a565b50565b6000610ba033610647565b15610bb457601436033560601c9050610bc3565b610bbc610bc7565b9050610bc4565b5b90565b600033905090565b6000610bd9610b95565b905090565b60008183610bec919061138c565b905092915050565b60008183610c02919061135b565b905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610cdd8161148c565b92915050565b600081519050610cf2816114a3565b92915050565b600081359050610d07816114ba565b92915050565b600081519050610d1c816114ba565b92915050565b600060208284031215610d3457600080fd5b6000610d4284828501610cce565b91505092915050565b60008060408385031215610d5e57600080fd5b6000610d6c85828601610cce565b9250506020610d7d85828601610cce565b9150509250929050565b600060208284031215610d9957600080fd5b6000610da784828501610ce3565b91505092915050565b600060208284031215610dc257600080fd5b6000610dd084828501610cf8565b91505092915050565b600060208284031215610deb57600080fd5b6000610df984828501610d0d565b91505092915050565b610e0b816113e6565b82525050565b610e1a816113f8565b82525050565b6000610e2d60268361134a565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e9360208361134a565b91507f53776565706572446566656e6465723a20616c72656164792066756e64696e676000830152602082019050919050565b6000610ed360258361134a565b91507f53776565706572446566656e6465723a206e6f20616e7920657263323020626160008301527f6c616e63650000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f39602b8361134a565b91507f53776565706572446566656e6465723a20657263323020616c6c6f77616e636560008301527f206e6f7420656e6f7567680000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9f60238361134a565b91507f53776565706572446566656e6465723a206e65656420746f2066756e6420666960008301527f72737400000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061100560268361134a565b91507f53776565706572446566656e6465723a2070657263656e74616765206973206960008301527f6e76616c696400000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061106b60208361134a565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006110ab60258361134a565b91507f53776565706572446566656e6465723a207472616e736665722066656573206660008301527f61696c65640000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061111160288361134a565b91507f53776565706572446566656e6465723a207472616e736665722062616c616e6360008301527f65206661696c65640000000000000000000000000000000000000000000000006020830152604082019050919050565b61117381611424565b82525050565b600060208201905061118e6000830184610e02565b92915050565b60006040820190506111a96000830185610e02565b6111b66020830184610e02565b9392505050565b60006060820190506111d26000830186610e02565b6111df6020830185610e02565b6111ec604083018461116a565b949350505050565b60006020820190506112096000830184610e11565b92915050565b6000602082019050818103600083015261122881610e20565b9050919050565b6000602082019050818103600083015261124881610e86565b9050919050565b6000602082019050818103600083015261126881610ec6565b9050919050565b6000602082019050818103600083015261128881610f2c565b9050919050565b600060208201905081810360008301526112a881610f92565b9050919050565b600060208201905081810360008301526112c881610ff8565b9050919050565b600060208201905081810360008301526112e88161105e565b9050919050565b600060208201905081810360008301526113088161109e565b9050919050565b6000602082019050818103600083015261132881611104565b9050919050565b6000602082019050611344600083018461116a565b92915050565b600082825260208201905092915050565b600061136682611424565b915061137183611424565b9250826113815761138061145d565b5b828204905092915050565b600061139782611424565b91506113a283611424565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113db576113da61142e565b5b828202905092915050565b60006113f182611404565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b611495816113e6565b81146114a057600080fd5b50565b6114ac816113f8565b81146114b757600080fd5b50565b6114c381611424565b81146114ce57600080fd5b5056fea2646970667358221220b0994cab2e99b022470f02b652c7314c94c7d472dbe6c8998339f45e5477dd1864736f6c63430008000033";

type SweeperDefenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SweeperDefenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SweeperDefender__factory extends ContractFactory {
  constructor(...args: SweeperDefenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SweeperDefender> {
    return super.deploy(
      trustedForwarder,
      overrides || {}
    ) as Promise<SweeperDefender>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): SweeperDefender {
    return super.attach(address) as SweeperDefender;
  }
  connect(signer: Signer): SweeperDefender__factory {
    return super.connect(signer) as SweeperDefender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SweeperDefenderInterface {
    return new utils.Interface(_abi) as SweeperDefenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SweeperDefender {
    return new Contract(address, _abi, signerOrProvider) as SweeperDefender;
  }
}
